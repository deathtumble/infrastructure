#!/bin/bash

set -e

terraform apply -auto-approve -state=terraform.tfstate -var-file=poc_poc_config.vartf

terraform output -json > output.json

address=$(jq ".postgres_db_address.value" output.json)

curl http://consul.urbanfortress.uk:80/v1/catalog/register -X PUT --data-binary @- <<BODY
{
    "Datacenter": "dc1", 
    "Node": "rds", 
    "Address": ${address}, 
    "Service": {
            "Service": "postgres", 
            "Port": 5432
    }
}' 
BODY

vars=""

terraform apply -auto-approve -state=terraform.tfstate -var-file=poc_poc_config.vartf

while test $# -gt 0
do
    case "$1" in
        nexus) 
            terraform apply -auto-approve -target=module.nexus.aws_ecs_service.this -state=terraform.tfstate -var-file=poc_poc_config.vartf -var 'nexus_task_status=down'
            ;;
        concourse) 
            terraform apply -auto-approve -target=module.concourse.aws_ecs_service.this -state=terraform.tfstate -var-file=poc_poc_config.vartf -var 'concourse_task_status=down'
            ;;
        dashing) 
            terraform apply -auto-approve -target=module.dashing.aws_ecs_service.this -state=terraform.tfstate -var-file=poc_poc_config.vartf -var 'dashing_task_status=down'
            ;;
        monitoring) 
            terraform apply -auto-approve -target=module.monitoring.aws_ecs_service.this -state=terraform.tfstate -var-file=poc_poc_config.vartf -var 'monitoring_task_status=down'
            ;;
    esac
    
    shift
done

sleep 90

terraform apply -auto-approve \
  -target=module.nexus.aws_ecs_service.this \
  -target=module.concourse.aws_ecs_service.this \
  -target=module.dashing.aws_ecs_service.this \
  -target=module.monitoring.aws_ecs_service.this \
  -state=terraform.tfstate \
  -var-file=poc_poc_config.vartf


