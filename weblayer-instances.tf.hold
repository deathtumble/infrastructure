resource "aws_instance" "weblayer" {
	ami = "${var.ecs_ami_id}"
	availability_zone = "${var.availability_zone}"
	tenancy = "default",
	ebs_optimized = "false",
	disable_api_termination = "false",
    instance_type= "t2.small"
    key_name = "poc"
    monitoring = "false",
    vpc_security_group_ids = [
    	"${aws_security_group.weblayer.id}",
    	"${aws_security_group.ssh.id}",
    	"${aws_security_group.consul-client.id}"
    ],
    subnet_id = "${aws_subnet.weblayer.id}",
    associate_public_ip_address = "true"
	source_dest_check = "true",
	iam_instance_profile = "ecsinstancerole",
	ipv6_address_count = "0",
    depends_on = ["aws_security_group.weblayer", "aws_subnet.weblayer"],
	user_data = <<EOF
#!/bin/bash
echo ECS_CLUSTER=weblayer > /etc/ecs/ecs.config
EOF

  tags {
    Name = "weblayer-${var.nameTag}"
	Ecosystem = "${var.ecosystem}"
	Environment = "${var.environment}"
	ConsulCluster = "${var.nameTag}"
  }
}

resource "aws_route_table" "weblayer" {
  vpc_id     = "${aws_vpc.default.id}"

  tags {
    Name        = "weblayer-${var.product}-${var.environment}"
    Product     = "${var.product}"
    Environment = "${var.environment}"
    Layer       = "weblayer"
  }
}

resource "aws_route" "weblayer" {
  route_table_id         = "${aws_route_table.weblayer.id}"
  destination_cidr_block = "0.0.0.0/0"
  gateway_id             = "${aws_internet_gateway.default.id}"
  depends_on             = ["aws_route_table.weblayer", "aws_internet_gateway.default"]
}

resource "aws_subnet" "weblayer" {
  vpc_id     = "${aws_vpc.default.id}"
  cidr_block        = "${var.weblayer_cidr}"
  availability_zone = "${var.availability_zone}"
  depends_on        = ["aws_subnet.weblayer", "aws_route_table.weblayer"]

  tags {
    Name        = "weblayer-${var.product}-${var.environment}"
    Product     = "${var.product}"
    Environment = "${var.environment}"
    Layer       = "weblayer"
  }
}

resource "aws_route_table_association" "weblayer" {
  subnet_id      = "${aws_subnet.weblayer.id}"
  route_table_id = "${aws_route_table.weblayer.id}"
  depends_on     = ["aws_subnet.weblayer", "aws_route_table.weblayer"]
}

resource "aws_security_group" "weblayer" {
  name = "weblayer-${var.product}-${var.environment}"

  vpc_id     = "${aws_vpc.default.id}"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["${var.vpc_cidr}", "${var.admin_cidr}"]
  }

  ingress {
    from_port   = 8081
    to_port     = 8081
    protocol    = "tcp"
    cidr_blocks = ["${var.vpc_cidr}", "${var.admin_cidr}"]
  }

  ingress {
    from_port   = 8181
    to_port     = 8181
    protocol    = "tcp"
    cidr_blocks = ["${var.vpc_cidr}", "${var.admin_cidr}"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags {
    Name        = "weblayer-${var.product}-${var.environment}"
    Product     = "${var.product}"
    Environment = "${var.environment}"
  }
}

variable "weblayer_cidr" {
  type    = "string"
  default = "10.0.16.0/23"
}

